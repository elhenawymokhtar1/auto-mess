// ุงุฎุชุจุงุฑ Webhook ูุญููุงู
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://ddwszecfsfkjnahesymm.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRkd3N6ZWNmc2Zram5haGVzeW1tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgzMDc2MDYsImV4cCI6MjA2Mzg4MzYwNn0.5jo4tgLAMqwVnYkhUYBa3WrNxann8xBqkNzba8DaCMg';
const supabase = createClient(supabaseUrl, supabaseKey);

// ูุญุงูุงุฉ ุฑุณุงูุฉ ูุงุฑุฏุฉ ูู Facebook
const mockIncomingMessage = {
  object: 'page',
  entry: [
    {
      id: '240244019177739', // ูุนุฑู ุงูุตูุญุฉ
      time: Date.now(),
      messaging: [
        {
          sender: {
            id: '1234567890' // ูุนุฑู ุงูุนููู
          },
          recipient: {
            id: '240244019177739' // ูุนุฑู ุงูุตูุญุฉ
          },
          timestamp: Date.now(),
          message: {
            mid: 'test_message_' + Date.now(),
            text: 'ูุฑุญุจุงุ ูุฐู ุฑุณุงูุฉ ุงุฎุชุจุงุฑ ูู ุงูุนููู'
          }
        }
      ]
    }
  ]
};

// ูุญุงูุงุฉ ุฑุณุงูุฉ ูุฑุณูุฉ ูู ุงูุตูุญุฉ (echo)
const mockEchoMessage = {
  object: 'page',
  entry: [
    {
      id: '240244019177739',
      time: Date.now(),
      messaging: [
        {
          sender: {
            id: '240244019177739' // ุงูุตูุญุฉ ูู ุงููุฑุณู
          },
          recipient: {
            id: '1234567890' // ุงูุนููู ูู ุงููุณุชูุจู
          },
          timestamp: Date.now(),
          message: {
            mid: 'echo_message_' + Date.now(),
            text: 'ูุฑุญุจุง! ุดูุฑุงู ูุชูุงุตูู ูุนูุง',
            is_echo: true // ูุฐุง ูุนูู ุฃู ุงูุฑุณุงูุฉ ูุฑุณูุฉ ูู ุงูุตูุญุฉ
          }
        }
      ]
    }
  ]
};

async function testWebhookLocally() {
  console.log('๐งช ุงุฎุชุจุงุฑ Facebook Webhook ูุญููุงู...\n');

  try {
    // ุงุณุชูุฑุงุฏ ุฏุงูุฉ ุงูู Webhook
    const { handler } = await import('./netlify/functions/facebook-webhook.js');

    // ุงุฎุชุจุงุฑ 1: ุฑุณุงูุฉ ูุงุฑุฏุฉ ูู ุงูุนููู
    console.log('1๏ธโฃ ุงุฎุชุจุงุฑ ุฑุณุงูุฉ ูุงุฑุฏุฉ ูู ุงูุนููู...');
    const incomingEvent = {
      httpMethod: 'POST',
      body: JSON.stringify(mockIncomingMessage),
      headers: {
        'content-type': 'application/json'
      }
    };

    const incomingResult = await handler(incomingEvent, {});
    console.log('๐ ูุชูุฌุฉ ูุนุงูุฌุฉ ุงูุฑุณุงูุฉ ุงููุงุฑุฏุฉ:', incomingResult);

    // ุงูุชุธุงุฑ ูููู ูููุนุงูุฌุฉ
    await new Promise(resolve => setTimeout(resolve, 2000));

    // ุงุฎุชุจุงุฑ 2: ุฑุณุงูุฉ ูุฑุณูุฉ ูู ุงูุตูุญุฉ (echo)
    console.log('\n2๏ธโฃ ุงุฎุชุจุงุฑ ุฑุณุงูุฉ ูุฑุณูุฉ ูู ุงูุตูุญุฉ (echo)...');
    const echoEvent = {
      httpMethod: 'POST',
      body: JSON.stringify(mockEchoMessage),
      headers: {
        'content-type': 'application/json'
      }
    };

    const echoResult = await handler(echoEvent, {});
    console.log('๐ ูุชูุฌุฉ ูุนุงูุฌุฉ ุงูุฑุณุงูุฉ ุงููุฑุณูุฉ:', echoResult);

    // ุงูุชุธุงุฑ ูููู ูููุนุงูุฌุฉ
    await new Promise(resolve => setTimeout(resolve, 2000));

    // ูุญุต ุงููุชุงุฆุฌ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    console.log('\n3๏ธโฃ ูุญุต ุงููุชุงุฆุฌ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...');

    // ูุญุต ุงููุญุงุฏุซุงุช
    const { data: conversations, error: convError } = await supabase
      .from('conversations')
      .select('*')
      .eq('customer_facebook_id', '1234567890');

    if (convError) {
      console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงููุญุงุฏุซุงุช:', convError);
    } else {
      console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ${conversations?.length || 0} ูุญุงุฏุซุฉ ููุนููู ุงูุชุฌุฑูุจู`);
      if (conversations && conversations.length > 0) {
        console.log('๐ ุชูุงุตูู ุงููุญุงุฏุซุฉ:', conversations[0]);
      }
    }

    // ูุญุต ุงูุฑุณุงุฆู
    if (conversations && conversations.length > 0) {
      const { data: messages, error: msgError } = await supabase
        .from('messages')
        .select('*')
        .eq('conversation_id', conversations[0].id)
        .order('created_at', { ascending: true });

      if (msgError) {
        console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูุฑุณุงุฆู:', msgError);
      } else {
        console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ${messages?.length || 0} ุฑุณุงูุฉ ูู ุงููุญุงุฏุซุฉ`);
        messages?.forEach((msg, index) => {
          console.log(`๐จ ุฑุณุงูุฉ ${index + 1}:`, {
            content: msg.content,
            sender_type: msg.sender_type,
            is_auto_reply: msg.is_auto_reply,
            created_at: msg.created_at
          });
        });
      }
    }

    // ุงุฎุชุจุงุฑ 3: ุงูุชุญูู ูู Facebook (GET request)
    console.log('\n4๏ธโฃ ุงุฎุชุจุงุฑ ุงูุชุญูู ูู Facebook...');
    const verifyEvent = {
      httpMethod: 'GET',
      queryStringParameters: {
        'hub.mode': 'subscribe',
        'hub.verify_token': 'facebook_webhook_verify_token_2024',
        'hub.challenge': 'test_challenge_123'
      }
    };

    const verifyResult = await handler(verifyEvent, {});
    console.log('๐ ูุชูุฌุฉ ุงูุชุญูู:', verifyResult);

    console.log('\n๐ ุงูุชูู ุงุฎุชุจุงุฑ Webhook ูุญููุงู!');
    console.log('\n๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:');
    console.log('1๏ธโฃ ุฑูุน ุงูุชุทุจูู ุนูู Netlify');
    console.log('2๏ธโฃ ุฅุนุฏุงุฏ Webhook ูู Facebook App Dashboard');
    console.log('3๏ธโฃ ุงุฎุชุจุงุฑ ุงูุฑุณุงุฆู ุงูุญููููุฉ ูู Facebook');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ Webhook:', error);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testWebhookLocally().then(() => {
  console.log('\n๐ ุงูุชูู ุงุฎุชุจุงุฑ Webhook');
  process.exit(0);
}).catch(error => {
  console.error('โ ุฎุทุฃ ูู ุชุดุบูู ุงูุงุฎุชุจุงุฑ:', error);
  process.exit(1);
});
